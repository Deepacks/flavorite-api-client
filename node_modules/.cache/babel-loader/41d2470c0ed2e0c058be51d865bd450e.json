{"ast":null,"code":"var _jsxFileName = \"/Users/decaf/Documents/Code/flavorite-api-client/src/components/settings/ChangePassword.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; //material-ui\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  buttonStyle: {\n    position: \"relative\",\n    bottom: 5,\n    left: 20,\n    color: \"#fff !important\",\n    borderColor: \"#e1e5ea\",\n    textTransform: \"none\",\n    transition: \"0.3s\",\n    \"&:hover\": {\n      color: \"#ca3e47 !important\"\n    }\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n    backgroundColor: \"#313131\"\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n    backgroundColor: \"#ca3e47\"\n  },\n  customPaper: {\n    backgroundColor: \"#414141\",\n    width: 700\n  },\n  white: {\n    color: \"rgba(255, 255, 255, 0.6) !important\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(255, 255, 255, 0.05)\"\n    },\n    borderColor: \"rgba(255, 255, 255, 0.3) !important\"\n  },\n  button: {\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    \"&:hover\": {\n      color: \"#ca3e47\"\n    }\n  },\n  dialogStyle: {\n    paddingRight: 16\n  }\n}));\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#ca3e47 !important\"\n    }\n  }\n});\n\nfunction ChangePassword(props) {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [passwords, setPasswords] = React.useState({\n    password: \"\",\n    check: \"\"\n  });\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setPasswords(prevValue => {\n      return { ...prevValue,\n        [name]: value\n      };\n    });\n  };\n\n  const handleClick = async () => {\n    if (passwords.password !== passwords.check) {\n      alert(\"Passwords do not match\");\n      setPasswords({\n        password: \"\",\n        check: \"\"\n      });\n    } else if (passwords.password === passwords.check) {\n      const requestOptions = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(passwords.password)\n      };\n      const res = await fetch(\"//no-url\", requestOptions);\n      props.setResListener(res);\n      handleClose();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonStyle,\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: handleClickOpen,\n        children: \"Change password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        classes: {\n          paper: classes.customPaper\n        },\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        id: \"dialog-fix\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          style: {\n            color: \"#fff\",\n            paddingBottom: 0\n          },\n          children: \"Change password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              InputLabelProps: {\n                classes: {\n                  root: classes.white\n                }\n              },\n              InputProps: {\n                classes: {\n                  notchedOutline: classes.white\n                },\n                className: classes.white\n              },\n              color: \"primary\",\n              margin: \"dense\",\n              label: \"New password\",\n              name: \"password\",\n              value: passwords.password,\n              type: \"password\",\n              variant: \"outlined\",\n              fullWidth: true,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              InputLabelProps: {\n                classes: {\n                  root: classes.white\n                }\n              },\n              InputProps: {\n                classes: {\n                  notchedOutline: classes.white\n                },\n                className: classes.white\n              },\n              color: \"primary\",\n              margin: \"dense\",\n              label: \"Repeat password\",\n              name: \"check\",\n              value: passwords.check,\n              type: \"password\",\n              variant: \"outlined\",\n              fullWidth: true,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            className: classes.dialogStyle,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              className: [\"case-fix\", classes.button].join(\" \"),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClick,\n              className: [\"case-fix\", classes.button].join(\" \"),\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChangePassword, \"kKzJm+IGR8lgCwc9zKt7mYyaHpI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/Users/decaf/Documents/Code/flavorite-api-client/src/components/settings/ChangePassword.jsx"],"names":["React","makeStyles","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","MuiThemeProvider","createMuiTheme","useStyles","buttonStyle","position","bottom","left","color","borderColor","textTransform","transition","appBar","top","backgroundColor","fabButton","zIndex","right","margin","customPaper","width","white","button","fontSize","dialogStyle","paddingRight","theme","palette","primary","main","ChangePassword","props","classes","open","setOpen","useState","passwords","setPasswords","password","check","handleClickOpen","handleClose","handleChange","event","value","name","target","prevValue","handleClick","alert","requestOptions","method","headers","body","JSON","stringify","res","fetch","setResListener","paper","paddingBottom","root","notchedOutline","className","join"],"mappings":"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","sourcesContent":["import React from \"react\";\n//material-ui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  buttonStyle: {\n    position: \"relative\",\n    bottom: 5,\n    left: 20,\n    color: \"#fff !important\",\n    borderColor: \"#e1e5ea\",\n    textTransform: \"none\",\n    transition: \"0.3s\",\n    \"&:hover\": {\n      color: \"#ca3e47 !important\",\n    },\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n    backgroundColor: \"#313131\",\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n    backgroundColor: \"#ca3e47\",\n  },\n  customPaper: {\n    backgroundColor: \"#414141\",\n    width: 700,\n  },\n  white: {\n    color: \"rgba(255, 255, 255, 0.6) !important\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(255, 255, 255, 0.05)\",\n    },\n    borderColor: \"rgba(255, 255, 255, 0.3) !important\",\n  },\n  button: {\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    \"&:hover\": {\n      color: \"#ca3e47\",\n    },\n  },\n  dialogStyle: {\n    paddingRight: 16,\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#ca3e47 !important\",\n    },\n  },\n});\n\nfunction ChangePassword(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [passwords, setPasswords] = React.useState({\n    password: \"\",\n    check: \"\",\n  });\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    setPasswords((prevValue) => {\n      return {\n        ...prevValue,\n        [name]: value,\n      };\n    });\n  };\n\n  const handleClick = async () => {\n    if (passwords.password !== passwords.check) {\n      alert(\"Passwords do not match\");\n      setPasswords({\n        password: \"\",\n        check: \"\",\n      });\n    } else if (passwords.password === passwords.check) {\n      const requestOptions = {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(passwords.password),\n      };\n      const res = await fetch(\"//no-url\", requestOptions);\n      props.setResListener(res);\n      handleClose();\n    }\n  };\n\n  return (\n    <div>\n      <MuiThemeProvider theme={theme}>\n        <Button\n          className={classes.buttonStyle}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={handleClickOpen}\n        >\n          Change password\n        </Button>\n        <Dialog\n          classes={{\n            paper: classes.customPaper,\n          }}\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n          id=\"dialog-fix\"\n        >\n          <DialogTitle\n            id=\"form-dialog-title\"\n            style={{ color: \"#fff\", paddingBottom: 0 }}\n          >\n            Change password\n          </DialogTitle>\n          <form noValidate autoComplete=\"off\">\n            <DialogContent>\n              <TextField\n                InputLabelProps={{\n                  classes: {\n                    root: classes.white,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    notchedOutline: classes.white,\n                  },\n                  className: classes.white,\n                }}\n                color=\"primary\"\n                margin=\"dense\"\n                label=\"New password\"\n                name=\"password\"\n                value={passwords.password}\n                type=\"password\"\n                variant=\"outlined\"\n                fullWidth\n                onChange={handleChange}\n              />\n              <TextField\n                InputLabelProps={{\n                  classes: {\n                    root: classes.white,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    notchedOutline: classes.white,\n                  },\n                  className: classes.white,\n                }}\n                color=\"primary\"\n                margin=\"dense\"\n                label=\"Repeat password\"\n                name=\"check\"\n                value={passwords.check}\n                type=\"password\"\n                variant=\"outlined\"\n                fullWidth\n                onChange={handleChange}\n              />\n            </DialogContent>\n            <DialogActions className={classes.dialogStyle}>\n              <Button\n                onClick={handleClose}\n                className={[\"case-fix\", classes.button].join(\" \")}\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleClick}\n                className={[\"case-fix\", classes.button].join(\" \")}\n              >\n                Confirm\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}