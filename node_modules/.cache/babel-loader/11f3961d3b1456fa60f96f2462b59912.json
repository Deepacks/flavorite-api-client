{"ast":null,"code":"var _jsxFileName = \"/Users/decaf/Documents/Code/flavorite-api-client/src/components/ClipboardButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\"; //material-ui\n\nimport Button from \"@material-ui/core/Button\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  },\n  button: {\n    backgroundColor: \"#525252\",\n    borderRadius: \"100%\",\n    height: \"60px !important\",\n    width: \"60px !important\",\n    padding: 6,\n    color: \"rgba(0, 0, 0, 0.54)\",\n    \"&:hover\": {\n      color: \"rgba(255, 255, 255, 0.84)\"\n    }\n  },\n  snackbarStyle: {\n    backgroundColor: \"#313131\",\n    color: \"#fff\",\n    border: \"1px solid #fff\"\n  },\n  actionStyle: {\n    display: \"none\"\n  },\n  messageStyle: {\n    marginRight: 5,\n    fontSize: \"1.2rem\"\n  },\n  iconStyle: {\n    color: \"#fff !important\",\n    marginTop: 3\n  }\n}));\n\nfunction ClipboardButton(props) {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: \"top\",\n    horizontal: \"center\"\n  });\n  const {\n    vertical,\n    horizontal,\n    open\n  } = state;\n\n  const handleClick = newState => () => {\n    setState({\n      open: true,\n      ...newState\n    });\n  };\n\n  const handleClose = () => {\n    setState({ ...state,\n      open: false\n    });\n  };\n\n  function Alert(props) {\n    return /*#__PURE__*/_jsxDEV(MuiAlert, {\n      classes: {\n        outlinedSuccess: classes.snackbarStyle,\n        action: classes.actionStyle,\n        message: classes.messageStyle,\n        icon: classes.iconStyle\n      },\n      elevation: 6,\n      variant: \"outlined\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CopyToClipboard, {\n      text: props.url,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        \"aria-label\": \"share\",\n        className: classes.button,\n        onClick: handleClick({\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }),\n        children: /*#__PURE__*/_jsxDEV(FileCopyIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 2000,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical,\n        horizontal\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        children: \"Copied\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, vertical + horizontal, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClipboardButton, \"Y21VzpguKohngM2pR8posIXuyMU=\", false, function () {\n  return [useStyles];\n});\n\n_c = ClipboardButton;\nexport default ClipboardButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClipboardButton\");","map":{"version":3,"sources":["/Users/decaf/Documents/Code/flavorite-api-client/src/components/ClipboardButton.jsx"],"names":["React","CopyToClipboard","Button","FileCopyIcon","makeStyles","MuiAlert","Snackbar","useStyles","theme","root","width","marginTop","spacing","button","backgroundColor","borderRadius","height","padding","color","snackbarStyle","border","actionStyle","display","messageStyle","marginRight","fontSize","iconStyle","ClipboardButton","props","classes","state","setState","useState","open","vertical","horizontal","handleClick","newState","handleClose","Alert","outlinedSuccess","action","message","icon","url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n//material-ui\nimport Button from \"@material-ui/core/Button\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  button: {\n    backgroundColor: \"#525252\",\n    borderRadius: \"100%\",\n    height: \"60px !important\",\n    width: \"60px !important\",\n    padding: 6,\n    color: \"rgba(0, 0, 0, 0.54)\",\n    \"&:hover\": {\n      color: \"rgba(255, 255, 255, 0.84)\",\n    },\n  },\n  snackbarStyle: {\n    backgroundColor: \"#313131\",\n    color: \"#fff\",\n    border: \"1px solid #fff\",\n  },\n  actionStyle: {\n    display: \"none\",\n  },\n  messageStyle: {\n    marginRight: 5,\n    fontSize: \"1.2rem\",\n  },\n  iconStyle: {\n    color: \"#fff !important\",\n    marginTop: 3,\n  },\n}));\n\nfunction ClipboardButton(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: \"top\",\n    horizontal: \"center\",\n  });\n\n  const { vertical, horizontal, open } = state;\n\n  const handleClick = (newState) => () => {\n    setState({ open: true, ...newState });\n  };\n\n  const handleClose = () => {\n    setState({ ...state, open: false });\n  };\n\n  function Alert(props) {\n    return (\n      <MuiAlert\n        classes={{\n          outlinedSuccess: classes.snackbarStyle,\n          action: classes.actionStyle,\n          message: classes.messageStyle,\n          icon: classes.iconStyle,\n        }}\n        elevation={6}\n        variant=\"outlined\"\n        {...props}\n      />\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <CopyToClipboard text={props.url}>\n        <Button\n          aria-label=\"share\"\n          className={classes.button}\n          onClick={handleClick({ vertical: \"bottom\", horizontal: \"left\" })}\n        >\n          <FileCopyIcon />\n        </Button>\n      </CopyToClipboard>\n      <Snackbar\n        open={open}\n        autoHideDuration={2000}\n        onClose={handleClose}\n        anchorOrigin={{ vertical, horizontal }}\n        key={vertical + horizontal}\n      >\n        <Alert onClose={handleClose}>Copied</Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default ClipboardButton;\n"]},"metadata":{},"sourceType":"module"}