{"ast":null,"code":"import _slicedToArray from\"/Users/decaf/Documents/Code/flavorite-api-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import CardDescriptionForm from\"./CardDescriptionForm\";//material-ui\nimport{makeStyles}from\"@material-ui/core/styles\";import Avatar from\"@material-ui/core/Avatar\";import Backdrop from\"@material-ui/core/Backdrop\";import Button from\"@material-ui/core/Button\";import Card from\"@material-ui/core/Card\";import CardActions from\"@material-ui/core/CardActions\";import CardContent from\"@material-ui/core/CardContent\";import IconButton from\"@material-ui/core/IconButton\";import Typography from\"@material-ui/core/Typography\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{avatarButton:{padding:0},avatarButtonColor:{color:\"#ca3e4750\"},image:{width:\"85%\",height:\"85%\"},backdrop:{zIndex:theme.zIndex.drawer+1,color:\"#fff\"},root:{minWidth:275,backgroundColor:\"#313131\",color:\"#fff\"},contentPadding:{paddingBottom:5},title:{fontSize:15}};});function AvatarDescription(props){var classes=useStyles();var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var handleClose=function handleClose(){setOpen(false);};var handleToggle=function handleToggle(){setOpen(!open);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(IconButton,{color:\"primary\",classes:{root:classes.avatarButton,colorPrimary:classes.avatarButtonColor},onClick:handleToggle,children:/*#__PURE__*/_jsx(Avatar,{\"aria-label\":\"recipe\",src:props.image,classes:{img:classes.image}})}),/*#__PURE__*/_jsx(Backdrop,{className:classes.backdrop,open:open,onClick:handleClose,children:/*#__PURE__*/_jsxs(Card,{className:classes.root,variant:\"outlined\",children:[/*#__PURE__*/_jsxs(CardContent,{classes:{root:classes.contentPadding},children:[/*#__PURE__*/_jsx(Typography,{className:classes.title,gutterBottom:true,children:props.title}),props.description?/*#__PURE__*/_jsx(Typography,{variant:\"body2\",component:\"p\",children:props.description}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",component:\"p\",style:{maxWidth:\"550px\"},children:\"No description\"})]}),/*#__PURE__*/_jsxs(CardActions,{children:[/*#__PURE__*/_jsx(Button,{size:\"small\",children:/*#__PURE__*/_jsx(\"a\",{href:props.url,target:\"_blank\",rel:\"noreferrer\",children:\"Open\"})}),!props.description&&/*#__PURE__*/_jsx(CardDescriptionForm,{id:props.id,title:props.title,setResListener:props.setResListener,python:props.python})]})]})})]});}export default AvatarDescription;","map":{"version":3,"sources":["/Users/decaf/Documents/Code/flavorite-api-client/src/components/AvatarDescription.jsx"],"names":["React","CardDescriptionForm","makeStyles","Avatar","Backdrop","Button","Card","CardActions","CardContent","IconButton","Typography","useStyles","theme","avatarButton","padding","avatarButtonColor","color","image","width","height","backdrop","zIndex","drawer","root","minWidth","backgroundColor","contentPadding","paddingBottom","title","fontSize","AvatarDescription","props","classes","useState","open","setOpen","handleClose","handleToggle","colorPrimary","img","description","maxWidth","url","id","setResListener","python"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CACA;AACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGT,UAAU,CAAC,SAACU,KAAD,QAAY,CACvCC,YAAY,CAAE,CACZC,OAAO,CAAE,CADG,CADyB,CAIvCC,iBAAiB,CAAE,CACjBC,KAAK,CAAE,WADU,CAJoB,CAOvCC,KAAK,CAAE,CACLC,KAAK,CAAE,KADF,CAELC,MAAM,CAAE,KAFH,CAPgC,CAWvCC,QAAQ,CAAE,CACRC,MAAM,CAAET,KAAK,CAACS,MAAN,CAAaC,MAAb,CAAsB,CADtB,CAERN,KAAK,CAAE,MAFC,CAX6B,CAevCO,IAAI,CAAE,CACJC,QAAQ,CAAE,GADN,CAEJC,eAAe,CAAE,SAFb,CAGJT,KAAK,CAAE,MAHH,CAfiC,CAoBvCU,cAAc,CAAE,CACdC,aAAa,CAAE,CADD,CApBuB,CAuBvCC,KAAK,CAAE,CACLC,QAAQ,CAAE,EADL,CAvBgC,CAAZ,EAAD,CAA5B,CA4BA,QAASC,CAAAA,iBAAT,CAA2BC,KAA3B,CAAkC,CAChC,GAAMC,CAAAA,OAAO,CAAGrB,SAAS,EAAzB,CADgC,oBAGRX,KAAK,CAACiC,QAAN,CAAe,KAAf,CAHQ,oDAGzBC,IAHyB,qBAGnBC,OAHmB,qBAIhC,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBD,OAAO,CAAC,KAAD,CAAP,CACD,CAFD,CAGA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBF,OAAO,CAAC,CAACD,IAAF,CAAP,CACD,CAFD,CAIA,mBACE,oCACE,KAAC,UAAD,EACE,KAAK,CAAC,SADR,CAEE,OAAO,CAAE,CACPX,IAAI,CAAES,OAAO,CAACnB,YADP,CAEPyB,YAAY,CAAEN,OAAO,CAACjB,iBAFf,CAFX,CAME,OAAO,CAAEsB,YANX,uBAQE,KAAC,MAAD,EACE,aAAW,QADb,CAEE,GAAG,CAAEN,KAAK,CAACd,KAFb,CAGE,OAAO,CAAE,CAAEsB,GAAG,CAAEP,OAAO,CAACf,KAAf,CAHX,EARF,EADF,cAeE,KAAC,QAAD,EAAU,SAAS,CAAEe,OAAO,CAACZ,QAA7B,CAAuC,IAAI,CAAEc,IAA7C,CAAmD,OAAO,CAAEE,WAA5D,uBACE,MAAC,IAAD,EAAM,SAAS,CAAEJ,OAAO,CAACT,IAAzB,CAA+B,OAAO,CAAC,UAAvC,wBACE,MAAC,WAAD,EAAa,OAAO,CAAE,CAAEA,IAAI,CAAES,OAAO,CAACN,cAAhB,CAAtB,wBACE,KAAC,UAAD,EAAY,SAAS,CAAEM,OAAO,CAACJ,KAA/B,CAAsC,YAAY,KAAlD,UACGG,KAAK,CAACH,KADT,EADF,CAIGG,KAAK,CAACS,WAAN,cACC,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,SAAS,CAAC,GAAtC,UACGT,KAAK,CAACS,WADT,EADD,cAKC,KAAC,UAAD,EACE,OAAO,CAAC,OADV,CAEE,SAAS,CAAC,GAFZ,CAGE,KAAK,CAAE,CAAEC,QAAQ,CAAE,OAAZ,CAHT,4BATJ,GADF,cAmBE,MAAC,WAAD,yBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,uBACE,UAAG,IAAI,CAAEV,KAAK,CAACW,GAAf,CAAoB,MAAM,CAAC,QAA3B,CAAoC,GAAG,CAAC,YAAxC,kBADF,EADF,CAMG,CAACX,KAAK,CAACS,WAAP,eACC,KAAC,mBAAD,EACE,EAAE,CAAET,KAAK,CAACY,EADZ,CAEE,KAAK,CAAEZ,KAAK,CAACH,KAFf,CAGE,cAAc,CAAEG,KAAK,CAACa,cAHxB,CAIE,MAAM,CAAEb,KAAK,CAACc,MAJhB,EAPJ,GAnBF,GADF,EAfF,GADF,CAuDD,CAED,cAAef,CAAAA,iBAAf","sourcesContent":["import React from \"react\";\nimport CardDescriptionForm from \"./CardDescriptionForm\";\n//material-ui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  avatarButton: {\n    padding: 0,\n  },\n  avatarButtonColor: {\n    color: \"#ca3e4750\",\n  },\n  image: {\n    width: \"85%\",\n    height: \"85%\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n  root: {\n    minWidth: 275,\n    backgroundColor: \"#313131\",\n    color: \"#fff\",\n  },\n  contentPadding: {\n    paddingBottom: 5,\n  },\n  title: {\n    fontSize: 15,\n  },\n}));\n\nfunction AvatarDescription(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div>\n      <IconButton\n        color=\"primary\"\n        classes={{\n          root: classes.avatarButton,\n          colorPrimary: classes.avatarButtonColor,\n        }}\n        onClick={handleToggle}\n      >\n        <Avatar\n          aria-label=\"recipe\"\n          src={props.image}\n          classes={{ img: classes.image }}\n        />\n      </IconButton>\n      <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\n        <Card className={classes.root} variant=\"outlined\">\n          <CardContent classes={{ root: classes.contentPadding }}>\n            <Typography className={classes.title} gutterBottom>\n              {props.title}\n            </Typography>\n            {props.description ? (\n              <Typography variant=\"body2\" component=\"p\">\n                {props.description}\n              </Typography>\n            ) : (\n              <Typography\n                variant=\"body2\"\n                component=\"p\"\n                style={{ maxWidth: \"550px\" }}\n              >\n                No description\n              </Typography>\n            )}\n          </CardContent>\n          <CardActions>\n            <Button size=\"small\">\n              <a href={props.url} target=\"_blank\" rel=\"noreferrer\">\n                Open\n              </a>\n            </Button>\n            {!props.description && (\n              <CardDescriptionForm\n                id={props.id}\n                title={props.title}\n                setResListener={props.setResListener}\n                python={props.python}\n              />\n            )}\n          </CardActions>\n        </Card>\n      </Backdrop>\n    </div>\n  );\n}\n\nexport default AvatarDescription;\n"]},"metadata":{},"sourceType":"module"}