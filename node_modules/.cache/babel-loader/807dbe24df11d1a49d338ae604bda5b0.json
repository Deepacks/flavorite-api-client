{"ast":null,"code":"var _jsxFileName = \"/Users/decaf/Documents/Code/flavorite-api-client/src/components/Cards.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport AvatarDescription from \"./AvatarDescription\";\nimport CardOptions from \"./CardOptions\";\nimport ClipboardButton from \"./ClipboardButton\";\nimport LikeButton from \"./LikeButton\"; //material-ui\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"510px\",\n    height: \"330px\",\n    backgroundColor: \"#525252\"\n  },\n  rootNoPrev: {\n    width: \"510px\",\n    height: \"160px\",\n    backgroundColor: \"#525252\"\n  },\n  iconsContainer: {\n    display: \"inline-block\",\n    position: \"relative\",\n    margin: \"0 35px 35px 0\"\n  },\n  cardHeader: {\n    color: \"#e1e5ea\"\n  },\n  titlePositionFix: {\n    marginLeft: 56,\n    width: 360,\n    marginTop: 6\n  },\n  redCirle: {\n    border: \"2px solid #ca3e47\",\n    position: \"absolute\",\n    top: 16,\n    width: 40,\n    height: 40,\n    borderRadius: \"100%\",\n    padding: 2\n  },\n  avatarStyles: {\n    margin: 0\n  },\n  optionsPosition: {\n    position: \"relative\",\n    top: 6\n  },\n  media: {\n    objectFit: \"cover\",\n    objectPosition: \"50% 0\",\n    width: 510,\n    height: 187,\n    filter: \"blur(1.4px)\",\n    transition: \"0.165s\",\n    \"&:hover\": {\n      filter: \"none\"\n    }\n  },\n  icons: {\n    position: \"absolute\",\n    bottom: 0,\n    padding: 6\n  }\n}));\n\nfunction Cards(props) {\n  _s();\n\n  const classes = useStyles();\n  var cardTitle; //checking title lenght and fixing if needed\n\n  if (props.title.split(\" \").length - 1 === 0) {\n    cardTitle = props.title.slice(0, 31) + \"\\n\" + props.title.slice(31);\n  } else cardTitle = props.title;\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.iconsContainer,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: props.preview ? classes.root : classes.rootNoPrev,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: classes.cardHeader,\n        classes: {\n          title: classes.titlePositionFix\n        },\n        avatar: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.redCirle,\n          children: /*#__PURE__*/_jsxDEV(AvatarDescription, {\n            id: props.id,\n            title: cardTitle,\n            image: props.image,\n            url: props.url,\n            description: props.description,\n            setResListener: props.setResListener,\n            className: classes.avatarStyles,\n            python: props.python\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this),\n        action: /*#__PURE__*/_jsxDEV(CardOptions, {\n          class: classes.optionsPosition,\n          id: props.id,\n          title: cardTitle,\n          description: props.description,\n          setResListener: props.setResListener,\n          python: props.python\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this),\n        title: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: props.url,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          className: \"link-color\",\n          children: cardTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this),\n        subheader: props.timeStamp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: props.url,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        className: \"link-color\",\n        children: props.preview && /*#__PURE__*/_jsxDEV(CardMedia, {\n          className: classes.media,\n          component: \"img\",\n          src: `data:image/png;base64, ${props.preview}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.icons,\n        disableSpacing: true,\n        children: [/*#__PURE__*/_jsxDEV(LikeButton, {\n          like: props.like,\n          id: props.id,\n          setResListener: props.setResListener,\n          python: props.python\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClipboardButton, {\n          url: props.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cards, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/decaf/Documents/Code/flavorite-api-client/src/components/Cards.jsx"],"names":["React","AvatarDescription","CardOptions","ClipboardButton","LikeButton","makeStyles","Card","CardHeader","CardActions","CardMedia","useStyles","root","width","height","backgroundColor","rootNoPrev","iconsContainer","display","position","margin","cardHeader","color","titlePositionFix","marginLeft","marginTop","redCirle","border","top","borderRadius","padding","avatarStyles","optionsPosition","media","objectFit","objectPosition","filter","transition","icons","bottom","Cards","props","classes","cardTitle","title","split","length","slice","preview","id","image","url","description","setResListener","python","timeStamp","like"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AvatarDescription from \"./AvatarDescription\";\nimport CardOptions from \"./CardOptions\";\nimport ClipboardButton from \"./ClipboardButton\";\nimport LikeButton from \"./LikeButton\";\n//material-ui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"510px\",\n    height: \"330px\",\n    backgroundColor: \"#525252\",\n  },\n  rootNoPrev: {\n    width: \"510px\",\n    height: \"160px\",\n    backgroundColor: \"#525252\",\n  },\n  iconsContainer: {\n    display: \"inline-block\",\n    position: \"relative\",\n    margin: \"0 35px 35px 0\",\n  },\n  cardHeader: {\n    color: \"#e1e5ea\",\n  },\n  titlePositionFix: {\n    marginLeft: 56,\n    width: 360,\n    marginTop: 6,\n  },\n  redCirle: {\n    border: \"2px solid #ca3e47\",\n    position: \"absolute\",\n    top: 16,\n    width: 40,\n    height: 40,\n    borderRadius: \"100%\",\n    padding: 2,\n  },\n  avatarStyles: {\n    margin: 0,\n  },\n  optionsPosition: {\n    position: \"relative\",\n    top: 6,\n  },\n  media: {\n    objectFit: \"cover\",\n    objectPosition: \"50% 0\",\n    width: 510,\n    height: 187,\n    filter: \"blur(1.4px)\",\n    transition: \"0.165s\",\n    \"&:hover\": {\n      filter: \"none\",\n    },\n  },\n  icons: {\n    position: \"absolute\",\n    bottom: 0,\n    padding: 6,\n  },\n}));\n\nfunction Cards(props) {\n  const classes = useStyles();\n\n  var cardTitle;\n  //checking title lenght and fixing if needed\n  if (props.title.split(\" \").length - 1 === 0) {\n    cardTitle = props.title.slice(0, 31) + \"\\n\" + props.title.slice(31);\n  } else cardTitle = props.title;\n\n  return (\n    <section className={classes.iconsContainer}>\n      <Card className={props.preview ? classes.root : classes.rootNoPrev}>\n        <CardHeader\n          className={classes.cardHeader}\n          classes={{\n            title: classes.titlePositionFix,\n          }}\n          avatar={\n            <div className={classes.redCirle}>\n              <AvatarDescription\n                id={props.id}\n                title={cardTitle}\n                image={props.image}\n                url={props.url}\n                description={props.description}\n                setResListener={props.setResListener}\n                className={classes.avatarStyles}\n                python={props.python}\n              />\n            </div>\n          }\n          action={\n            <CardOptions\n              class={classes.optionsPosition}\n              id={props.id}\n              title={cardTitle}\n              description={props.description}\n              setResListener={props.setResListener}\n              python={props.python}\n            />\n          }\n          title={\n            <a\n              href={props.url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"link-color\"\n            >\n              {cardTitle}\n            </a>\n          }\n          subheader={props.timeStamp}\n        />\n        <a\n          href={props.url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"link-color\"\n        >\n          {props.preview && (\n            <CardMedia\n              className={classes.media}\n              component=\"img\"\n              src={`data:image/png;base64, ${props.preview}`}\n            />\n          )}\n        </a>\n\n        <CardActions className={classes.icons} disableSpacing>\n          <LikeButton\n            like={props.like}\n            id={props.id}\n            setResListener={props.setResListener}\n            python={props.python}\n          />\n          <ClipboardButton url={props.url} />\n        </CardActions>\n      </Card>\n    </section>\n  );\n}\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}