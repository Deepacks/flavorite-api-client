{"ast":null,"code":"var _jsxFileName = \"/Users/decaf/Documents/Code/flavorite-api-client/src/components/CardDescriptionForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; //material-ui\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  buttonStyle: {\n    color: \"#e1e5ea\",\n    \"&:hover\": {\n      color: \"#ca3e47\"\n    }\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n    backgroundColor: \"#313131\"\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n    backgroundColor: \"#ca3e47\"\n  },\n  customPaper: {\n    backgroundColor: \"#414141\",\n    width: 700\n  },\n  white: {\n    color: \"rgba(255, 255, 255, 0.6) !important\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(255, 255, 255, 0.05)\"\n    },\n    borderColor: \"rgba(255, 255, 255, 0.3) !important\"\n  },\n  button: {\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    \"&:hover\": {\n      color: \"#ca3e47\"\n    }\n  },\n  dialogStyle: {\n    paddingRight: 16\n  }\n}));\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#ca3e47 !important\"\n    }\n  }\n});\n\nfunction CardDescriptionForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [descriptionValue, setDescriptionValue] = React.useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = event => {\n    setDescriptionValue(event.target.value);\n  };\n\n  const editDescription = async () => {\n    if (props.python === true) {\n      const requestOptions = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          description: descriptionValue\n        })\n      };\n      const res = await fetch(\"https://favbc.herokuapp.com/bookmarks/\" + props.id, requestOptions);\n      props.setResListener(res);\n    } else if (props.python === false) {\n      const requestOptions = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          description: descriptionValue\n        })\n      };\n      const res = await fetch(process.env.REACT_APP_API_URL + \"/bookmarks/\" + props.id, requestOptions);\n      props.setResListener(res);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: classes.buttonStyle,\n      onClick: handleClickOpen,\n      children: \"Add description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        classes: {\n          paper: classes.customPaper\n        },\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        id: \"dialog-fix\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          style: {\n            color: \"#fff\",\n            paddingBottom: 0\n          },\n          children: \"Add description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              InputLabelProps: {\n                classes: {\n                  root: classes.white\n                }\n              },\n              InputProps: {\n                classes: {\n                  notchedOutline: classes.white\n                },\n                className: classes.white\n              },\n              color: \"primary\",\n              margin: \"dense\",\n              id: \"outlined-basic\",\n              label: \"Description\",\n              type: \"text\",\n              variant: \"outlined\",\n              fullWidth: true,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            className: classes.dialogStyle,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              className: [\"case-fix\", classes.button].join(\" \"),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: editDescription,\n              className: [\"case-fix\", classes.button].join(\" \"),\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardDescriptionForm, \"cq4qboRBulKkOOoCEfJnCdgdnME=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardDescriptionForm;\nexport default CardDescriptionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDescriptionForm\");","map":{"version":3,"sources":["/Users/decaf/Documents/Code/flavorite-api-client/src/components/CardDescriptionForm.jsx"],"names":["React","makeStyles","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","MuiThemeProvider","createMuiTheme","useStyles","buttonStyle","color","appBar","top","bottom","backgroundColor","fabButton","position","zIndex","left","right","margin","customPaper","width","white","borderColor","button","fontSize","dialogStyle","paddingRight","theme","palette","primary","main","CardDescriptionForm","props","classes","open","setOpen","useState","descriptionValue","setDescriptionValue","handleClickOpen","handleClose","handleChange","event","target","value","editDescription","python","requestOptions","method","headers","body","JSON","stringify","description","res","fetch","id","setResListener","process","env","REACT_APP_API_URL","paper","paddingBottom","root","notchedOutline","className","join"],"mappings":"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","sourcesContent":["import React from \"react\";\n//material-ui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  buttonStyle: {\n    color: \"#e1e5ea\",\n    \"&:hover\": {\n      color: \"#ca3e47\",\n    },\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n    backgroundColor: \"#313131\",\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n    backgroundColor: \"#ca3e47\",\n  },\n  customPaper: {\n    backgroundColor: \"#414141\",\n    width: 700,\n  },\n  white: {\n    color: \"rgba(255, 255, 255, 0.6) !important\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(255, 255, 255, 0.05)\",\n    },\n    borderColor: \"rgba(255, 255, 255, 0.3) !important\",\n  },\n  button: {\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    \"&:hover\": {\n      color: \"#ca3e47\",\n    },\n  },\n  dialogStyle: {\n    paddingRight: 16,\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#ca3e47 !important\",\n    },\n  },\n});\n\nfunction CardDescriptionForm(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [descriptionValue, setDescriptionValue] = React.useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event) => {\n    setDescriptionValue(event.target.value);\n  };\n\n  const editDescription = async () => {\n    if (props.python === true) {\n      const requestOptions = {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          description: descriptionValue,\n        }),\n      };\n      const res = await fetch(\n        \"https://favbc.herokuapp.com/bookmarks/\" + props.id,\n        requestOptions\n      );\n      props.setResListener(res);\n    } else if (props.python === false) {\n      const requestOptions = {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          description: descriptionValue,\n        }),\n      };\n      const res = await fetch(\n        process.env.REACT_APP_API_URL + \"/bookmarks/\" + props.id,\n        requestOptions\n      );\n      props.setResListener(res);\n    }\n  };\n\n  return (\n    <div>\n      <Button className={classes.buttonStyle} onClick={handleClickOpen}>\n        Add description\n      </Button>\n      <MuiThemeProvider theme={theme}>\n        <Dialog\n          classes={{\n            paper: classes.customPaper,\n          }}\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n          id=\"dialog-fix\"\n        >\n          <DialogTitle\n            id=\"form-dialog-title\"\n            style={{ color: \"#fff\", paddingBottom: 0 }}\n          >\n            Add description\n          </DialogTitle>\n          <form noValidate autoComplete=\"off\">\n            <DialogContent>\n              <TextField\n                InputLabelProps={{\n                  classes: {\n                    root: classes.white,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    notchedOutline: classes.white,\n                  },\n                  className: classes.white,\n                }}\n                color=\"primary\"\n                margin=\"dense\"\n                id=\"outlined-basic\"\n                label=\"Description\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                onChange={handleChange}\n              />\n            </DialogContent>\n            <DialogActions className={classes.dialogStyle}>\n              <Button\n                onClick={handleClose}\n                className={[\"case-fix\", classes.button].join(\" \")}\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={editDescription}\n                className={[\"case-fix\", classes.button].join(\" \")}\n              >\n                Confirm\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default CardDescriptionForm;\n"]},"metadata":{},"sourceType":"module"}